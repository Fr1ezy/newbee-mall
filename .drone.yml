kind: pipeline
type: docker
name: default

steps:
  # 恢复缓存，减少依赖重新下载
  - name: restore-cache
    image: plugins/cache
    settings:
      restore: true
      mount:
        - target: /root/.m2/repository

  # 编译项目
  - name: build
    image: maven:3.8.1-jdk-8
    environment:
      MAVEN_OPTS: "-Dmaven.repo.local=/root/.m2/repository -DskipTests=true"
    commands:
      - mvn clean install -B -DskipTests
      - ls -l target  # 列出 target 目录中的所有文件

  # 启动 Web 服务器
  - name: start-server
    image: openjdk:8-jre
    environment:
      MAVEN_OPTS: "-Dmaven.repo.local=/root/.m2/repository"
    commands:
      - ls -l target  # 列出 target 目录中的所有文件，以验证 JAR 文件的路径
      - java -jar target/newbee-mall-1.0.0-SNAPSHOT.jar &
      - sleep 10  # 等待服务器启动

  # 运行 nuclei 漏洞扫描
  - name: nuclei-scan
    image: nuclei-scanner
    commands:
      - nuclei -u https://www.dtiip.com/  # 这里的端口应与项目启动的端口一致
  # 运行 nikto 漏洞扫描
  - name: nikto-scan
    image: nikto-scanner
    commands:
      - nikto -h https://www.dtiip.com/  # 这里的端口应与项目启动的端口一致

  # 重新缓存构建后的依赖
  - name: rebuild-cache
    image: plugins/cache
    settings:
      rebuild: true
      mount:
        - target: /root/.m2/repository
services:
  - name: docker
    image: docker:20.10-dind
    privileged: true

    
trigger:
  branch:
    - main
    - master
  event:
    - push
